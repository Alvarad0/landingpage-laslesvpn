@mixin min-mq($bp) {
  @if map_has_key($breakpoints, $bp) {
    $bp-val: map_get($breakpoints, $bp);
    @media (min-width: $bp-val){
      @content;
    }
  } @else {
    @warn 'Invalid breakpoint: #{$bp}';
  }
}

@mixin max-mq($bp) {
  @if map_has_key($breakpoints, $bp) {
    $bp-val: map_get($breakpoints, $bp);
    @media (max-width: ($bp-val - 1)) {
      @content;
    }
  } @else {
    @warn 'Invalid breakpoint: #{$bp}';
  }
}

@mixin btw-mq($lower, $upper) {
  @if map_has_key($breakpoints, $lower) and map_has_key($breakpoints, $upper) {
    $l-bp: map_get($breakpoints, $lower);
    $u-bp: map_get($breakpoints, $upper);
    @media (min-width: $l-bp) and (max-width: ($u-bp - 1)) {
      @content;
    }
  } @else {
    @if (map_has_key($breakpoints, $lower) == false) {
      @warn 'Your lower breakpoint was invalid: #{$lower}';
    }
    @if (map_has_key($breakpoints, $upper) == false) {
      @warn 'Your upper breakpoint was invalid: #{$upper}';
    }
  }
}

@mixin ani-ease {
  transition: all ease-in-out .3s;
}

@mixin shadow {
  box-shadow: 0 74px 93px -12px rgba(13, 16, 37, .1);
}

@mixin btn {
  display: inline-flex;
  justify-content: center;
  font-family: var(--rb), var(--sf);
  font-size: 16px;
  border-radius: 10px;
  padding: .9em 4em;
  text-decoration: none;
  background: var(--primary-color);
  color: #ffffff;
  box-shadow: 0 21px 45px 10px rgba(245, 56, 56, .35);
}

@mixin btn-hover {
  transform: scale(1.1);
}